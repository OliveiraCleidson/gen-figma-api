/*
Figma API

Testing VariablesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"testing"

	openapiclient "github.com/oliveiracleidson/gen-figma-api"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_openapi_VariablesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test VariablesAPIService GetLocalVariables", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var fileKey string

		resp, httpRes, err := apiClient.VariablesAPI.GetLocalVariables(context.Background(), fileKey).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VariablesAPIService GetPublishedVariables", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var fileKey string

		resp, httpRes, err := apiClient.VariablesAPI.GetPublishedVariables(context.Background(), fileKey).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test VariablesAPIService PostVariables", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var fileKey string

		resp, httpRes, err := apiClient.VariablesAPI.PostVariables(context.Background(), fileKey).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
