/*
Figma API

Testing FilesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"testing"

	openapiclient "github.com/oliveiracleidson/gen-figma-api"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
)

func Test_openapi_FilesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test FilesAPIService GetFile", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var fileKey string

		resp, httpRes, err := apiClient.FilesAPI.GetFile(context.Background(), fileKey).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FilesAPIService GetFileNodes", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var fileKey string

		resp, httpRes, err := apiClient.FilesAPI.GetFileNodes(context.Background(), fileKey).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FilesAPIService GetFileVersions", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var fileKey string

		resp, httpRes, err := apiClient.FilesAPI.GetFileVersions(context.Background(), fileKey).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FilesAPIService GetImageFills", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var fileKey string

		resp, httpRes, err := apiClient.FilesAPI.GetImageFills(context.Background(), fileKey).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FilesAPIService GetImages", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var fileKey string

		resp, httpRes, err := apiClient.FilesAPI.GetImages(context.Background(), fileKey).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
