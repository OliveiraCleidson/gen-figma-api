/*
Figma API

This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).

API version: 0.20.0
Contact: support@figma.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// HasGeometryTraitAllOfFillOverrideTable - struct for HasGeometryTraitAllOfFillOverrideTable
type HasGeometryTraitAllOfFillOverrideTable struct {
	PaintOverride *PaintOverride
}

// PaintOverrideAsHasGeometryTraitAllOfFillOverrideTable is a convenience function that returns PaintOverride wrapped in HasGeometryTraitAllOfFillOverrideTable
func PaintOverrideAsHasGeometryTraitAllOfFillOverrideTable(v *PaintOverride) HasGeometryTraitAllOfFillOverrideTable {
	return HasGeometryTraitAllOfFillOverrideTable{
		PaintOverride: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *HasGeometryTraitAllOfFillOverrideTable) UnmarshalJSON(data []byte) error {
	var err error
	// this object is nullable so check if the payload is null or empty string
	if string(data) == "" || string(data) == "{}" {
		return nil
	}

	match := 0
	// try to unmarshal data into PaintOverride
	err = newStrictDecoder(data).Decode(&dst.PaintOverride)
	if err == nil {
		jsonPaintOverride, _ := json.Marshal(dst.PaintOverride)
		if string(jsonPaintOverride) == "{}" { // empty struct
			dst.PaintOverride = nil
		} else {
			if err = validator.Validate(dst.PaintOverride); err != nil {
				dst.PaintOverride = nil
			} else {
				match++
			}
		}
	} else {
		dst.PaintOverride = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.PaintOverride = nil

		return fmt.Errorf("data matches more than one schema in oneOf(HasGeometryTraitAllOfFillOverrideTable)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(HasGeometryTraitAllOfFillOverrideTable)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src HasGeometryTraitAllOfFillOverrideTable) MarshalJSON() ([]byte, error) {
	if src.PaintOverride != nil {
		return json.Marshal(&src.PaintOverride)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *HasGeometryTraitAllOfFillOverrideTable) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.PaintOverride != nil {
		return obj.PaintOverride
	}

	// all schemas are nil
	return nil
}

type NullableHasGeometryTraitAllOfFillOverrideTable struct {
	value *HasGeometryTraitAllOfFillOverrideTable
	isSet bool
}

func (v NullableHasGeometryTraitAllOfFillOverrideTable) Get() *HasGeometryTraitAllOfFillOverrideTable {
	return v.value
}

func (v *NullableHasGeometryTraitAllOfFillOverrideTable) Set(val *HasGeometryTraitAllOfFillOverrideTable) {
	v.value = val
	v.isSet = true
}

func (v NullableHasGeometryTraitAllOfFillOverrideTable) IsSet() bool {
	return v.isSet
}

func (v *NullableHasGeometryTraitAllOfFillOverrideTable) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHasGeometryTraitAllOfFillOverrideTable(val *HasGeometryTraitAllOfFillOverrideTable) *NullableHasGeometryTraitAllOfFillOverrideTable {
	return &NullableHasGeometryTraitAllOfFillOverrideTable{value: val, isSet: true}
}

func (v NullableHasGeometryTraitAllOfFillOverrideTable) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHasGeometryTraitAllOfFillOverrideTable) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


