/*
Figma API

This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).

API version: 0.20.0
Contact: support@figma.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the LayoutGridBoundVariables type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LayoutGridBoundVariables{}

// LayoutGridBoundVariables The variables bound to a particular field on this layout grid
type LayoutGridBoundVariables struct {
	GutterSize *VariableAlias `json:"gutterSize,omitempty"`
	NumSections *VariableAlias `json:"numSections,omitempty"`
	SectionSize *VariableAlias `json:"sectionSize,omitempty"`
	Offset *VariableAlias `json:"offset,omitempty"`
}

// NewLayoutGridBoundVariables instantiates a new LayoutGridBoundVariables object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLayoutGridBoundVariables() *LayoutGridBoundVariables {
	this := LayoutGridBoundVariables{}
	return &this
}

// NewLayoutGridBoundVariablesWithDefaults instantiates a new LayoutGridBoundVariables object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLayoutGridBoundVariablesWithDefaults() *LayoutGridBoundVariables {
	this := LayoutGridBoundVariables{}
	return &this
}

// GetGutterSize returns the GutterSize field value if set, zero value otherwise.
func (o *LayoutGridBoundVariables) GetGutterSize() VariableAlias {
	if o == nil || IsNil(o.GutterSize) {
		var ret VariableAlias
		return ret
	}
	return *o.GutterSize
}

// GetGutterSizeOk returns a tuple with the GutterSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LayoutGridBoundVariables) GetGutterSizeOk() (*VariableAlias, bool) {
	if o == nil || IsNil(o.GutterSize) {
		return nil, false
	}
	return o.GutterSize, true
}

// HasGutterSize returns a boolean if a field has been set.
func (o *LayoutGridBoundVariables) HasGutterSize() bool {
	if o != nil && !IsNil(o.GutterSize) {
		return true
	}

	return false
}

// SetGutterSize gets a reference to the given VariableAlias and assigns it to the GutterSize field.
func (o *LayoutGridBoundVariables) SetGutterSize(v VariableAlias) {
	o.GutterSize = &v
}

// GetNumSections returns the NumSections field value if set, zero value otherwise.
func (o *LayoutGridBoundVariables) GetNumSections() VariableAlias {
	if o == nil || IsNil(o.NumSections) {
		var ret VariableAlias
		return ret
	}
	return *o.NumSections
}

// GetNumSectionsOk returns a tuple with the NumSections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LayoutGridBoundVariables) GetNumSectionsOk() (*VariableAlias, bool) {
	if o == nil || IsNil(o.NumSections) {
		return nil, false
	}
	return o.NumSections, true
}

// HasNumSections returns a boolean if a field has been set.
func (o *LayoutGridBoundVariables) HasNumSections() bool {
	if o != nil && !IsNil(o.NumSections) {
		return true
	}

	return false
}

// SetNumSections gets a reference to the given VariableAlias and assigns it to the NumSections field.
func (o *LayoutGridBoundVariables) SetNumSections(v VariableAlias) {
	o.NumSections = &v
}

// GetSectionSize returns the SectionSize field value if set, zero value otherwise.
func (o *LayoutGridBoundVariables) GetSectionSize() VariableAlias {
	if o == nil || IsNil(o.SectionSize) {
		var ret VariableAlias
		return ret
	}
	return *o.SectionSize
}

// GetSectionSizeOk returns a tuple with the SectionSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LayoutGridBoundVariables) GetSectionSizeOk() (*VariableAlias, bool) {
	if o == nil || IsNil(o.SectionSize) {
		return nil, false
	}
	return o.SectionSize, true
}

// HasSectionSize returns a boolean if a field has been set.
func (o *LayoutGridBoundVariables) HasSectionSize() bool {
	if o != nil && !IsNil(o.SectionSize) {
		return true
	}

	return false
}

// SetSectionSize gets a reference to the given VariableAlias and assigns it to the SectionSize field.
func (o *LayoutGridBoundVariables) SetSectionSize(v VariableAlias) {
	o.SectionSize = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *LayoutGridBoundVariables) GetOffset() VariableAlias {
	if o == nil || IsNil(o.Offset) {
		var ret VariableAlias
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LayoutGridBoundVariables) GetOffsetOk() (*VariableAlias, bool) {
	if o == nil || IsNil(o.Offset) {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *LayoutGridBoundVariables) HasOffset() bool {
	if o != nil && !IsNil(o.Offset) {
		return true
	}

	return false
}

// SetOffset gets a reference to the given VariableAlias and assigns it to the Offset field.
func (o *LayoutGridBoundVariables) SetOffset(v VariableAlias) {
	o.Offset = &v
}

func (o LayoutGridBoundVariables) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LayoutGridBoundVariables) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GutterSize) {
		toSerialize["gutterSize"] = o.GutterSize
	}
	if !IsNil(o.NumSections) {
		toSerialize["numSections"] = o.NumSections
	}
	if !IsNil(o.SectionSize) {
		toSerialize["sectionSize"] = o.SectionSize
	}
	if !IsNil(o.Offset) {
		toSerialize["offset"] = o.Offset
	}
	return toSerialize, nil
}

type NullableLayoutGridBoundVariables struct {
	value *LayoutGridBoundVariables
	isSet bool
}

func (v NullableLayoutGridBoundVariables) Get() *LayoutGridBoundVariables {
	return v.value
}

func (v *NullableLayoutGridBoundVariables) Set(val *LayoutGridBoundVariables) {
	v.value = val
	v.isSet = true
}

func (v NullableLayoutGridBoundVariables) IsSet() bool {
	return v.isSet
}

func (v *NullableLayoutGridBoundVariables) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLayoutGridBoundVariables(val *LayoutGridBoundVariables) *NullableLayoutGridBoundVariables {
	return &NullableLayoutGridBoundVariables{value: val, isSet: true}
}

func (v NullableLayoutGridBoundVariables) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLayoutGridBoundVariables) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


