/*
Figma API

This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).

API version: 0.20.0
Contact: support@figma.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WebhookV2Request type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookV2Request{}

// WebhookV2Request Information regarding the most recent interactions sent to a webhook endpoint
type WebhookV2Request struct {
	// The ID of the webhook the requests were sent to
	WebhookId string `json:"webhook_id"`
	RequestInfo WebhookV2RequestInfo `json:"request_info"`
	ResponseInfo WebhookV2ResponseInfo `json:"response_info"`
	// Error message for this request. NULL if no error occurred
	ErrorMsg NullableString `json:"error_msg"`
}

type _WebhookV2Request WebhookV2Request

// NewWebhookV2Request instantiates a new WebhookV2Request object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookV2Request(webhookId string, requestInfo WebhookV2RequestInfo, responseInfo WebhookV2ResponseInfo, errorMsg NullableString) *WebhookV2Request {
	this := WebhookV2Request{}
	this.WebhookId = webhookId
	this.RequestInfo = requestInfo
	this.ResponseInfo = responseInfo
	this.ErrorMsg = errorMsg
	return &this
}

// NewWebhookV2RequestWithDefaults instantiates a new WebhookV2Request object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookV2RequestWithDefaults() *WebhookV2Request {
	this := WebhookV2Request{}
	return &this
}

// GetWebhookId returns the WebhookId field value
func (o *WebhookV2Request) GetWebhookId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookId
}

// GetWebhookIdOk returns a tuple with the WebhookId field value
// and a boolean to check if the value has been set.
func (o *WebhookV2Request) GetWebhookIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WebhookId, true
}

// SetWebhookId sets field value
func (o *WebhookV2Request) SetWebhookId(v string) {
	o.WebhookId = v
}

// GetRequestInfo returns the RequestInfo field value
func (o *WebhookV2Request) GetRequestInfo() WebhookV2RequestInfo {
	if o == nil {
		var ret WebhookV2RequestInfo
		return ret
	}

	return o.RequestInfo
}

// GetRequestInfoOk returns a tuple with the RequestInfo field value
// and a boolean to check if the value has been set.
func (o *WebhookV2Request) GetRequestInfoOk() (*WebhookV2RequestInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestInfo, true
}

// SetRequestInfo sets field value
func (o *WebhookV2Request) SetRequestInfo(v WebhookV2RequestInfo) {
	o.RequestInfo = v
}

// GetResponseInfo returns the ResponseInfo field value
func (o *WebhookV2Request) GetResponseInfo() WebhookV2ResponseInfo {
	if o == nil {
		var ret WebhookV2ResponseInfo
		return ret
	}

	return o.ResponseInfo
}

// GetResponseInfoOk returns a tuple with the ResponseInfo field value
// and a boolean to check if the value has been set.
func (o *WebhookV2Request) GetResponseInfoOk() (*WebhookV2ResponseInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResponseInfo, true
}

// SetResponseInfo sets field value
func (o *WebhookV2Request) SetResponseInfo(v WebhookV2ResponseInfo) {
	o.ResponseInfo = v
}

// GetErrorMsg returns the ErrorMsg field value
// If the value is explicit nil, the zero value for string will be returned
func (o *WebhookV2Request) GetErrorMsg() string {
	if o == nil || o.ErrorMsg.Get() == nil {
		var ret string
		return ret
	}

	return *o.ErrorMsg.Get()
}

// GetErrorMsgOk returns a tuple with the ErrorMsg field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebhookV2Request) GetErrorMsgOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorMsg.Get(), o.ErrorMsg.IsSet()
}

// SetErrorMsg sets field value
func (o *WebhookV2Request) SetErrorMsg(v string) {
	o.ErrorMsg.Set(&v)
}

func (o WebhookV2Request) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookV2Request) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["webhook_id"] = o.WebhookId
	toSerialize["request_info"] = o.RequestInfo
	toSerialize["response_info"] = o.ResponseInfo
	toSerialize["error_msg"] = o.ErrorMsg.Get()
	return toSerialize, nil
}

func (o *WebhookV2Request) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"webhook_id",
		"request_info",
		"response_info",
		"error_msg",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookV2Request := _WebhookV2Request{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhookV2Request)

	if err != nil {
		return err
	}

	*o = WebhookV2Request(varWebhookV2Request)

	return err
}

type NullableWebhookV2Request struct {
	value *WebhookV2Request
	isSet bool
}

func (v NullableWebhookV2Request) Get() *WebhookV2Request {
	return v.value
}

func (v *NullableWebhookV2Request) Set(val *WebhookV2Request) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookV2Request) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookV2Request) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookV2Request(val *WebhookV2Request) *NullableWebhookV2Request {
	return &NullableWebhookV2Request{value: val, isSet: true}
}

func (v NullableWebhookV2Request) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookV2Request) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


