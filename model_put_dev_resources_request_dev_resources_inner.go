/*
Figma API

This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).

API version: 0.20.0
Contact: support@figma.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PutDevResourcesRequestDevResourcesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutDevResourcesRequestDevResourcesInner{}

// PutDevResourcesRequestDevResourcesInner struct for PutDevResourcesRequestDevResourcesInner
type PutDevResourcesRequestDevResourcesInner struct {
	// Unique identifier of the dev resource
	Id string `json:"id"`
	// The name of the dev resource.
	Name *string `json:"name,omitempty"`
	// The URL of the dev resource.
	Url *string `json:"url,omitempty"`
}

type _PutDevResourcesRequestDevResourcesInner PutDevResourcesRequestDevResourcesInner

// NewPutDevResourcesRequestDevResourcesInner instantiates a new PutDevResourcesRequestDevResourcesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutDevResourcesRequestDevResourcesInner(id string) *PutDevResourcesRequestDevResourcesInner {
	this := PutDevResourcesRequestDevResourcesInner{}
	this.Id = id
	return &this
}

// NewPutDevResourcesRequestDevResourcesInnerWithDefaults instantiates a new PutDevResourcesRequestDevResourcesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutDevResourcesRequestDevResourcesInnerWithDefaults() *PutDevResourcesRequestDevResourcesInner {
	this := PutDevResourcesRequestDevResourcesInner{}
	return &this
}

// GetId returns the Id field value
func (o *PutDevResourcesRequestDevResourcesInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PutDevResourcesRequestDevResourcesInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PutDevResourcesRequestDevResourcesInner) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PutDevResourcesRequestDevResourcesInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutDevResourcesRequestDevResourcesInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PutDevResourcesRequestDevResourcesInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PutDevResourcesRequestDevResourcesInner) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *PutDevResourcesRequestDevResourcesInner) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutDevResourcesRequestDevResourcesInner) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *PutDevResourcesRequestDevResourcesInner) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *PutDevResourcesRequestDevResourcesInner) SetUrl(v string) {
	o.Url = &v
}

func (o PutDevResourcesRequestDevResourcesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutDevResourcesRequestDevResourcesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

func (o *PutDevResourcesRequestDevResourcesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPutDevResourcesRequestDevResourcesInner := _PutDevResourcesRequestDevResourcesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPutDevResourcesRequestDevResourcesInner)

	if err != nil {
		return err
	}

	*o = PutDevResourcesRequestDevResourcesInner(varPutDevResourcesRequestDevResourcesInner)

	return err
}

type NullablePutDevResourcesRequestDevResourcesInner struct {
	value *PutDevResourcesRequestDevResourcesInner
	isSet bool
}

func (v NullablePutDevResourcesRequestDevResourcesInner) Get() *PutDevResourcesRequestDevResourcesInner {
	return v.value
}

func (v *NullablePutDevResourcesRequestDevResourcesInner) Set(val *PutDevResourcesRequestDevResourcesInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePutDevResourcesRequestDevResourcesInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePutDevResourcesRequestDevResourcesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutDevResourcesRequestDevResourcesInner(val *PutDevResourcesRequestDevResourcesInner) *NullablePutDevResourcesRequestDevResourcesInner {
	return &NullablePutDevResourcesRequestDevResourcesInner{value: val, isSet: true}
}

func (v NullablePutDevResourcesRequestDevResourcesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutDevResourcesRequestDevResourcesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


