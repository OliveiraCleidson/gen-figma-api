/*
Figma API

This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).

API version: 0.20.0
Contact: support@figma.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the TypeStyleBoundVariables type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TypeStyleBoundVariables{}

// TypeStyleBoundVariables The variables bound to a particular field on this style
type TypeStyleBoundVariables struct {
	FontFamily *VariableAlias `json:"fontFamily,omitempty"`
	FontSize *VariableAlias `json:"fontSize,omitempty"`
	FontStyle *VariableAlias `json:"fontStyle,omitempty"`
	FontWeight *VariableAlias `json:"fontWeight,omitempty"`
	LetterSpacing *VariableAlias `json:"letterSpacing,omitempty"`
	LineHeight *VariableAlias `json:"lineHeight,omitempty"`
	ParagraphSpacing *VariableAlias `json:"paragraphSpacing,omitempty"`
	ParagraphIndent *VariableAlias `json:"paragraphIndent,omitempty"`
}

// NewTypeStyleBoundVariables instantiates a new TypeStyleBoundVariables object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTypeStyleBoundVariables() *TypeStyleBoundVariables {
	this := TypeStyleBoundVariables{}
	return &this
}

// NewTypeStyleBoundVariablesWithDefaults instantiates a new TypeStyleBoundVariables object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTypeStyleBoundVariablesWithDefaults() *TypeStyleBoundVariables {
	this := TypeStyleBoundVariables{}
	return &this
}

// GetFontFamily returns the FontFamily field value if set, zero value otherwise.
func (o *TypeStyleBoundVariables) GetFontFamily() VariableAlias {
	if o == nil || IsNil(o.FontFamily) {
		var ret VariableAlias
		return ret
	}
	return *o.FontFamily
}

// GetFontFamilyOk returns a tuple with the FontFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypeStyleBoundVariables) GetFontFamilyOk() (*VariableAlias, bool) {
	if o == nil || IsNil(o.FontFamily) {
		return nil, false
	}
	return o.FontFamily, true
}

// HasFontFamily returns a boolean if a field has been set.
func (o *TypeStyleBoundVariables) HasFontFamily() bool {
	if o != nil && !IsNil(o.FontFamily) {
		return true
	}

	return false
}

// SetFontFamily gets a reference to the given VariableAlias and assigns it to the FontFamily field.
func (o *TypeStyleBoundVariables) SetFontFamily(v VariableAlias) {
	o.FontFamily = &v
}

// GetFontSize returns the FontSize field value if set, zero value otherwise.
func (o *TypeStyleBoundVariables) GetFontSize() VariableAlias {
	if o == nil || IsNil(o.FontSize) {
		var ret VariableAlias
		return ret
	}
	return *o.FontSize
}

// GetFontSizeOk returns a tuple with the FontSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypeStyleBoundVariables) GetFontSizeOk() (*VariableAlias, bool) {
	if o == nil || IsNil(o.FontSize) {
		return nil, false
	}
	return o.FontSize, true
}

// HasFontSize returns a boolean if a field has been set.
func (o *TypeStyleBoundVariables) HasFontSize() bool {
	if o != nil && !IsNil(o.FontSize) {
		return true
	}

	return false
}

// SetFontSize gets a reference to the given VariableAlias and assigns it to the FontSize field.
func (o *TypeStyleBoundVariables) SetFontSize(v VariableAlias) {
	o.FontSize = &v
}

// GetFontStyle returns the FontStyle field value if set, zero value otherwise.
func (o *TypeStyleBoundVariables) GetFontStyle() VariableAlias {
	if o == nil || IsNil(o.FontStyle) {
		var ret VariableAlias
		return ret
	}
	return *o.FontStyle
}

// GetFontStyleOk returns a tuple with the FontStyle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypeStyleBoundVariables) GetFontStyleOk() (*VariableAlias, bool) {
	if o == nil || IsNil(o.FontStyle) {
		return nil, false
	}
	return o.FontStyle, true
}

// HasFontStyle returns a boolean if a field has been set.
func (o *TypeStyleBoundVariables) HasFontStyle() bool {
	if o != nil && !IsNil(o.FontStyle) {
		return true
	}

	return false
}

// SetFontStyle gets a reference to the given VariableAlias and assigns it to the FontStyle field.
func (o *TypeStyleBoundVariables) SetFontStyle(v VariableAlias) {
	o.FontStyle = &v
}

// GetFontWeight returns the FontWeight field value if set, zero value otherwise.
func (o *TypeStyleBoundVariables) GetFontWeight() VariableAlias {
	if o == nil || IsNil(o.FontWeight) {
		var ret VariableAlias
		return ret
	}
	return *o.FontWeight
}

// GetFontWeightOk returns a tuple with the FontWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypeStyleBoundVariables) GetFontWeightOk() (*VariableAlias, bool) {
	if o == nil || IsNil(o.FontWeight) {
		return nil, false
	}
	return o.FontWeight, true
}

// HasFontWeight returns a boolean if a field has been set.
func (o *TypeStyleBoundVariables) HasFontWeight() bool {
	if o != nil && !IsNil(o.FontWeight) {
		return true
	}

	return false
}

// SetFontWeight gets a reference to the given VariableAlias and assigns it to the FontWeight field.
func (o *TypeStyleBoundVariables) SetFontWeight(v VariableAlias) {
	o.FontWeight = &v
}

// GetLetterSpacing returns the LetterSpacing field value if set, zero value otherwise.
func (o *TypeStyleBoundVariables) GetLetterSpacing() VariableAlias {
	if o == nil || IsNil(o.LetterSpacing) {
		var ret VariableAlias
		return ret
	}
	return *o.LetterSpacing
}

// GetLetterSpacingOk returns a tuple with the LetterSpacing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypeStyleBoundVariables) GetLetterSpacingOk() (*VariableAlias, bool) {
	if o == nil || IsNil(o.LetterSpacing) {
		return nil, false
	}
	return o.LetterSpacing, true
}

// HasLetterSpacing returns a boolean if a field has been set.
func (o *TypeStyleBoundVariables) HasLetterSpacing() bool {
	if o != nil && !IsNil(o.LetterSpacing) {
		return true
	}

	return false
}

// SetLetterSpacing gets a reference to the given VariableAlias and assigns it to the LetterSpacing field.
func (o *TypeStyleBoundVariables) SetLetterSpacing(v VariableAlias) {
	o.LetterSpacing = &v
}

// GetLineHeight returns the LineHeight field value if set, zero value otherwise.
func (o *TypeStyleBoundVariables) GetLineHeight() VariableAlias {
	if o == nil || IsNil(o.LineHeight) {
		var ret VariableAlias
		return ret
	}
	return *o.LineHeight
}

// GetLineHeightOk returns a tuple with the LineHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypeStyleBoundVariables) GetLineHeightOk() (*VariableAlias, bool) {
	if o == nil || IsNil(o.LineHeight) {
		return nil, false
	}
	return o.LineHeight, true
}

// HasLineHeight returns a boolean if a field has been set.
func (o *TypeStyleBoundVariables) HasLineHeight() bool {
	if o != nil && !IsNil(o.LineHeight) {
		return true
	}

	return false
}

// SetLineHeight gets a reference to the given VariableAlias and assigns it to the LineHeight field.
func (o *TypeStyleBoundVariables) SetLineHeight(v VariableAlias) {
	o.LineHeight = &v
}

// GetParagraphSpacing returns the ParagraphSpacing field value if set, zero value otherwise.
func (o *TypeStyleBoundVariables) GetParagraphSpacing() VariableAlias {
	if o == nil || IsNil(o.ParagraphSpacing) {
		var ret VariableAlias
		return ret
	}
	return *o.ParagraphSpacing
}

// GetParagraphSpacingOk returns a tuple with the ParagraphSpacing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypeStyleBoundVariables) GetParagraphSpacingOk() (*VariableAlias, bool) {
	if o == nil || IsNil(o.ParagraphSpacing) {
		return nil, false
	}
	return o.ParagraphSpacing, true
}

// HasParagraphSpacing returns a boolean if a field has been set.
func (o *TypeStyleBoundVariables) HasParagraphSpacing() bool {
	if o != nil && !IsNil(o.ParagraphSpacing) {
		return true
	}

	return false
}

// SetParagraphSpacing gets a reference to the given VariableAlias and assigns it to the ParagraphSpacing field.
func (o *TypeStyleBoundVariables) SetParagraphSpacing(v VariableAlias) {
	o.ParagraphSpacing = &v
}

// GetParagraphIndent returns the ParagraphIndent field value if set, zero value otherwise.
func (o *TypeStyleBoundVariables) GetParagraphIndent() VariableAlias {
	if o == nil || IsNil(o.ParagraphIndent) {
		var ret VariableAlias
		return ret
	}
	return *o.ParagraphIndent
}

// GetParagraphIndentOk returns a tuple with the ParagraphIndent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TypeStyleBoundVariables) GetParagraphIndentOk() (*VariableAlias, bool) {
	if o == nil || IsNil(o.ParagraphIndent) {
		return nil, false
	}
	return o.ParagraphIndent, true
}

// HasParagraphIndent returns a boolean if a field has been set.
func (o *TypeStyleBoundVariables) HasParagraphIndent() bool {
	if o != nil && !IsNil(o.ParagraphIndent) {
		return true
	}

	return false
}

// SetParagraphIndent gets a reference to the given VariableAlias and assigns it to the ParagraphIndent field.
func (o *TypeStyleBoundVariables) SetParagraphIndent(v VariableAlias) {
	o.ParagraphIndent = &v
}

func (o TypeStyleBoundVariables) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TypeStyleBoundVariables) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FontFamily) {
		toSerialize["fontFamily"] = o.FontFamily
	}
	if !IsNil(o.FontSize) {
		toSerialize["fontSize"] = o.FontSize
	}
	if !IsNil(o.FontStyle) {
		toSerialize["fontStyle"] = o.FontStyle
	}
	if !IsNil(o.FontWeight) {
		toSerialize["fontWeight"] = o.FontWeight
	}
	if !IsNil(o.LetterSpacing) {
		toSerialize["letterSpacing"] = o.LetterSpacing
	}
	if !IsNil(o.LineHeight) {
		toSerialize["lineHeight"] = o.LineHeight
	}
	if !IsNil(o.ParagraphSpacing) {
		toSerialize["paragraphSpacing"] = o.ParagraphSpacing
	}
	if !IsNil(o.ParagraphIndent) {
		toSerialize["paragraphIndent"] = o.ParagraphIndent
	}
	return toSerialize, nil
}

type NullableTypeStyleBoundVariables struct {
	value *TypeStyleBoundVariables
	isSet bool
}

func (v NullableTypeStyleBoundVariables) Get() *TypeStyleBoundVariables {
	return v.value
}

func (v *NullableTypeStyleBoundVariables) Set(val *TypeStyleBoundVariables) {
	v.value = val
	v.isSet = true
}

func (v NullableTypeStyleBoundVariables) IsSet() bool {
	return v.isSet
}

func (v *NullableTypeStyleBoundVariables) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTypeStyleBoundVariables(val *TypeStyleBoundVariables) *NullableTypeStyleBoundVariables {
	return &NullableTypeStyleBoundVariables{value: val, isSet: true}
}

func (v NullableTypeStyleBoundVariables) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTypeStyleBoundVariables) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


