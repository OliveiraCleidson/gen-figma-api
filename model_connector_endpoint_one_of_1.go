/*
Figma API

This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).

API version: 0.20.0
Contact: support@figma.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConnectorEndpointOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectorEndpointOneOf1{}

// ConnectorEndpointOneOf1 struct for ConnectorEndpointOneOf1
type ConnectorEndpointOneOf1 struct {
	// Node ID that this endpoint attaches to.
	EndpointNodeId *string `json:"endpointNodeId,omitempty"`
	// The magnet type is a string enum.
	Magnet *string `json:"magnet,omitempty"`
}

// NewConnectorEndpointOneOf1 instantiates a new ConnectorEndpointOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorEndpointOneOf1() *ConnectorEndpointOneOf1 {
	this := ConnectorEndpointOneOf1{}
	return &this
}

// NewConnectorEndpointOneOf1WithDefaults instantiates a new ConnectorEndpointOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorEndpointOneOf1WithDefaults() *ConnectorEndpointOneOf1 {
	this := ConnectorEndpointOneOf1{}
	return &this
}

// GetEndpointNodeId returns the EndpointNodeId field value if set, zero value otherwise.
func (o *ConnectorEndpointOneOf1) GetEndpointNodeId() string {
	if o == nil || IsNil(o.EndpointNodeId) {
		var ret string
		return ret
	}
	return *o.EndpointNodeId
}

// GetEndpointNodeIdOk returns a tuple with the EndpointNodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorEndpointOneOf1) GetEndpointNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.EndpointNodeId) {
		return nil, false
	}
	return o.EndpointNodeId, true
}

// HasEndpointNodeId returns a boolean if a field has been set.
func (o *ConnectorEndpointOneOf1) HasEndpointNodeId() bool {
	if o != nil && !IsNil(o.EndpointNodeId) {
		return true
	}

	return false
}

// SetEndpointNodeId gets a reference to the given string and assigns it to the EndpointNodeId field.
func (o *ConnectorEndpointOneOf1) SetEndpointNodeId(v string) {
	o.EndpointNodeId = &v
}

// GetMagnet returns the Magnet field value if set, zero value otherwise.
func (o *ConnectorEndpointOneOf1) GetMagnet() string {
	if o == nil || IsNil(o.Magnet) {
		var ret string
		return ret
	}
	return *o.Magnet
}

// GetMagnetOk returns a tuple with the Magnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorEndpointOneOf1) GetMagnetOk() (*string, bool) {
	if o == nil || IsNil(o.Magnet) {
		return nil, false
	}
	return o.Magnet, true
}

// HasMagnet returns a boolean if a field has been set.
func (o *ConnectorEndpointOneOf1) HasMagnet() bool {
	if o != nil && !IsNil(o.Magnet) {
		return true
	}

	return false
}

// SetMagnet gets a reference to the given string and assigns it to the Magnet field.
func (o *ConnectorEndpointOneOf1) SetMagnet(v string) {
	o.Magnet = &v
}

func (o ConnectorEndpointOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectorEndpointOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndpointNodeId) {
		toSerialize["endpointNodeId"] = o.EndpointNodeId
	}
	if !IsNil(o.Magnet) {
		toSerialize["magnet"] = o.Magnet
	}
	return toSerialize, nil
}

type NullableConnectorEndpointOneOf1 struct {
	value *ConnectorEndpointOneOf1
	isSet bool
}

func (v NullableConnectorEndpointOneOf1) Get() *ConnectorEndpointOneOf1 {
	return v.value
}

func (v *NullableConnectorEndpointOneOf1) Set(val *ConnectorEndpointOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorEndpointOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorEndpointOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorEndpointOneOf1(val *ConnectorEndpointOneOf1) *NullableConnectorEndpointOneOf1 {
	return &NullableConnectorEndpointOneOf1{value: val, isSet: true}
}

func (v NullableConnectorEndpointOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorEndpointOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


