/*
Figma API

This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).

API version: 0.20.0
Contact: support@figma.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WebhookV2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookV2{}

// WebhookV2 A description of an HTTP webhook (from Figma back to your application)
type WebhookV2 struct {
	// The ID of the webhook
	Id string `json:"id"`
	// The event this webhook triggers on
	EventType WebhookV2Event `json:"event_type"`
	// The team id you are subscribed to for updates
	TeamId string `json:"team_id"`
	// The current status of the webhook
	Status WebhookV2Status `json:"status"`
	// The client ID of the OAuth application that registered this webhook, if any
	ClientId NullableString `json:"client_id"`
	// The passcode that will be passed back to the webhook endpoint
	Passcode string `json:"passcode"`
	// The endpoint that will be hit when the webhook is triggered
	Endpoint string `json:"endpoint"`
	// Optional user-provided description or name for the webhook. This is provided to help make maintaining a number of webhooks more convenient. Max length 140 characters.
	Description NullableString `json:"description"`
}

type _WebhookV2 WebhookV2

// NewWebhookV2 instantiates a new WebhookV2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookV2(id string, eventType WebhookV2Event, teamId string, status WebhookV2Status, clientId NullableString, passcode string, endpoint string, description NullableString) *WebhookV2 {
	this := WebhookV2{}
	this.Id = id
	this.EventType = eventType
	this.TeamId = teamId
	this.Status = status
	this.ClientId = clientId
	this.Passcode = passcode
	this.Endpoint = endpoint
	this.Description = description
	return &this
}

// NewWebhookV2WithDefaults instantiates a new WebhookV2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookV2WithDefaults() *WebhookV2 {
	this := WebhookV2{}
	return &this
}

// GetId returns the Id field value
func (o *WebhookV2) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *WebhookV2) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *WebhookV2) SetId(v string) {
	o.Id = v
}

// GetEventType returns the EventType field value
func (o *WebhookV2) GetEventType() WebhookV2Event {
	if o == nil {
		var ret WebhookV2Event
		return ret
	}

	return o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
func (o *WebhookV2) GetEventTypeOk() (*WebhookV2Event, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventType, true
}

// SetEventType sets field value
func (o *WebhookV2) SetEventType(v WebhookV2Event) {
	o.EventType = v
}

// GetTeamId returns the TeamId field value
func (o *WebhookV2) GetTeamId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TeamId
}

// GetTeamIdOk returns a tuple with the TeamId field value
// and a boolean to check if the value has been set.
func (o *WebhookV2) GetTeamIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TeamId, true
}

// SetTeamId sets field value
func (o *WebhookV2) SetTeamId(v string) {
	o.TeamId = v
}

// GetStatus returns the Status field value
func (o *WebhookV2) GetStatus() WebhookV2Status {
	if o == nil {
		var ret WebhookV2Status
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *WebhookV2) GetStatusOk() (*WebhookV2Status, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *WebhookV2) SetStatus(v WebhookV2Status) {
	o.Status = v
}

// GetClientId returns the ClientId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *WebhookV2) GetClientId() string {
	if o == nil || o.ClientId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ClientId.Get()
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebhookV2) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientId.Get(), o.ClientId.IsSet()
}

// SetClientId sets field value
func (o *WebhookV2) SetClientId(v string) {
	o.ClientId.Set(&v)
}

// GetPasscode returns the Passcode field value
func (o *WebhookV2) GetPasscode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Passcode
}

// GetPasscodeOk returns a tuple with the Passcode field value
// and a boolean to check if the value has been set.
func (o *WebhookV2) GetPasscodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Passcode, true
}

// SetPasscode sets field value
func (o *WebhookV2) SetPasscode(v string) {
	o.Passcode = v
}

// GetEndpoint returns the Endpoint field value
func (o *WebhookV2) GetEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *WebhookV2) GetEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *WebhookV2) SetEndpoint(v string) {
	o.Endpoint = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *WebhookV2) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *WebhookV2) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *WebhookV2) SetDescription(v string) {
	o.Description.Set(&v)
}

func (o WebhookV2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookV2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["event_type"] = o.EventType
	toSerialize["team_id"] = o.TeamId
	toSerialize["status"] = o.Status
	toSerialize["client_id"] = o.ClientId.Get()
	toSerialize["passcode"] = o.Passcode
	toSerialize["endpoint"] = o.Endpoint
	toSerialize["description"] = o.Description.Get()
	return toSerialize, nil
}

func (o *WebhookV2) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"event_type",
		"team_id",
		"status",
		"client_id",
		"passcode",
		"endpoint",
		"description",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookV2 := _WebhookV2{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhookV2)

	if err != nil {
		return err
	}

	*o = WebhookV2(varWebhookV2)

	return err
}

type NullableWebhookV2 struct {
	value *WebhookV2
	isSet bool
}

func (v NullableWebhookV2) Get() *WebhookV2 {
	return v.value
}

func (v *NullableWebhookV2) Set(val *WebhookV2) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookV2) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookV2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookV2(val *WebhookV2) *NullableWebhookV2 {
	return &NullableWebhookV2{value: val, isSet: true}
}

func (v NullableWebhookV2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookV2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


