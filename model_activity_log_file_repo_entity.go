/*
Figma API

This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).

API version: 0.20.0
Contact: support@figma.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ActivityLogFileRepoEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ActivityLogFileRepoEntity{}

// ActivityLogFileRepoEntity A file branch that diverges from and can be merged back into the main file
type ActivityLogFileRepoEntity struct {
	// The type of entity.
	Type string `json:"type"`
	// Unique identifier of the file branch.
	Id string `json:"id"`
	// Name of the file.
	Name string `json:"name"`
	// Key of the main file.
	MainFileKey string `json:"main_file_key"`
}

type _ActivityLogFileRepoEntity ActivityLogFileRepoEntity

// NewActivityLogFileRepoEntity instantiates a new ActivityLogFileRepoEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityLogFileRepoEntity(type_ string, id string, name string, mainFileKey string) *ActivityLogFileRepoEntity {
	this := ActivityLogFileRepoEntity{}
	this.Type = type_
	this.Id = id
	this.Name = name
	this.MainFileKey = mainFileKey
	return &this
}

// NewActivityLogFileRepoEntityWithDefaults instantiates a new ActivityLogFileRepoEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityLogFileRepoEntityWithDefaults() *ActivityLogFileRepoEntity {
	this := ActivityLogFileRepoEntity{}
	return &this
}

// GetType returns the Type field value
func (o *ActivityLogFileRepoEntity) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ActivityLogFileRepoEntity) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ActivityLogFileRepoEntity) SetType(v string) {
	o.Type = v
}

// GetId returns the Id field value
func (o *ActivityLogFileRepoEntity) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ActivityLogFileRepoEntity) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ActivityLogFileRepoEntity) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ActivityLogFileRepoEntity) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ActivityLogFileRepoEntity) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ActivityLogFileRepoEntity) SetName(v string) {
	o.Name = v
}

// GetMainFileKey returns the MainFileKey field value
func (o *ActivityLogFileRepoEntity) GetMainFileKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MainFileKey
}

// GetMainFileKeyOk returns a tuple with the MainFileKey field value
// and a boolean to check if the value has been set.
func (o *ActivityLogFileRepoEntity) GetMainFileKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MainFileKey, true
}

// SetMainFileKey sets field value
func (o *ActivityLogFileRepoEntity) SetMainFileKey(v string) {
	o.MainFileKey = v
}

func (o ActivityLogFileRepoEntity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ActivityLogFileRepoEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["main_file_key"] = o.MainFileKey
	return toSerialize, nil
}

func (o *ActivityLogFileRepoEntity) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
		"id",
		"name",
		"main_file_key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varActivityLogFileRepoEntity := _ActivityLogFileRepoEntity{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varActivityLogFileRepoEntity)

	if err != nil {
		return err
	}

	*o = ActivityLogFileRepoEntity(varActivityLogFileRepoEntity)

	return err
}

type NullableActivityLogFileRepoEntity struct {
	value *ActivityLogFileRepoEntity
	isSet bool
}

func (v NullableActivityLogFileRepoEntity) Get() *ActivityLogFileRepoEntity {
	return v.value
}

func (v *NullableActivityLogFileRepoEntity) Set(val *ActivityLogFileRepoEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityLogFileRepoEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityLogFileRepoEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityLogFileRepoEntity(val *ActivityLogFileRepoEntity) *NullableActivityLogFileRepoEntity {
	return &NullableActivityLogFileRepoEntity{value: val, isSet: true}
}

func (v NullableActivityLogFileRepoEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityLogFileRepoEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


