/*
Figma API

This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).

API version: 0.20.0
Contact: support@figma.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PostDevResourcesRequestDevResourcesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PostDevResourcesRequestDevResourcesInner{}

// PostDevResourcesRequestDevResourcesInner struct for PostDevResourcesRequestDevResourcesInner
type PostDevResourcesRequestDevResourcesInner struct {
	// The name of the dev resource.
	Name string `json:"name"`
	// The URL of the dev resource.
	Url string `json:"url"`
	// The file key where the dev resource belongs.
	FileKey string `json:"file_key"`
	// The target node to attach the dev resource to.
	NodeId string `json:"node_id"`
}

type _PostDevResourcesRequestDevResourcesInner PostDevResourcesRequestDevResourcesInner

// NewPostDevResourcesRequestDevResourcesInner instantiates a new PostDevResourcesRequestDevResourcesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPostDevResourcesRequestDevResourcesInner(name string, url string, fileKey string, nodeId string) *PostDevResourcesRequestDevResourcesInner {
	this := PostDevResourcesRequestDevResourcesInner{}
	this.Name = name
	this.Url = url
	this.FileKey = fileKey
	this.NodeId = nodeId
	return &this
}

// NewPostDevResourcesRequestDevResourcesInnerWithDefaults instantiates a new PostDevResourcesRequestDevResourcesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPostDevResourcesRequestDevResourcesInnerWithDefaults() *PostDevResourcesRequestDevResourcesInner {
	this := PostDevResourcesRequestDevResourcesInner{}
	return &this
}

// GetName returns the Name field value
func (o *PostDevResourcesRequestDevResourcesInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PostDevResourcesRequestDevResourcesInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PostDevResourcesRequestDevResourcesInner) SetName(v string) {
	o.Name = v
}

// GetUrl returns the Url field value
func (o *PostDevResourcesRequestDevResourcesInner) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *PostDevResourcesRequestDevResourcesInner) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *PostDevResourcesRequestDevResourcesInner) SetUrl(v string) {
	o.Url = v
}

// GetFileKey returns the FileKey field value
func (o *PostDevResourcesRequestDevResourcesInner) GetFileKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileKey
}

// GetFileKeyOk returns a tuple with the FileKey field value
// and a boolean to check if the value has been set.
func (o *PostDevResourcesRequestDevResourcesInner) GetFileKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileKey, true
}

// SetFileKey sets field value
func (o *PostDevResourcesRequestDevResourcesInner) SetFileKey(v string) {
	o.FileKey = v
}

// GetNodeId returns the NodeId field value
func (o *PostDevResourcesRequestDevResourcesInner) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *PostDevResourcesRequestDevResourcesInner) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *PostDevResourcesRequestDevResourcesInner) SetNodeId(v string) {
	o.NodeId = v
}

func (o PostDevResourcesRequestDevResourcesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PostDevResourcesRequestDevResourcesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["url"] = o.Url
	toSerialize["file_key"] = o.FileKey
	toSerialize["node_id"] = o.NodeId
	return toSerialize, nil
}

func (o *PostDevResourcesRequestDevResourcesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"url",
		"file_key",
		"node_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPostDevResourcesRequestDevResourcesInner := _PostDevResourcesRequestDevResourcesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPostDevResourcesRequestDevResourcesInner)

	if err != nil {
		return err
	}

	*o = PostDevResourcesRequestDevResourcesInner(varPostDevResourcesRequestDevResourcesInner)

	return err
}

type NullablePostDevResourcesRequestDevResourcesInner struct {
	value *PostDevResourcesRequestDevResourcesInner
	isSet bool
}

func (v NullablePostDevResourcesRequestDevResourcesInner) Get() *PostDevResourcesRequestDevResourcesInner {
	return v.value
}

func (v *NullablePostDevResourcesRequestDevResourcesInner) Set(val *PostDevResourcesRequestDevResourcesInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePostDevResourcesRequestDevResourcesInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePostDevResourcesRequestDevResourcesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePostDevResourcesRequestDevResourcesInner(val *PostDevResourcesRequestDevResourcesInner) *NullablePostDevResourcesRequestDevResourcesInner {
	return &NullablePostDevResourcesRequestDevResourcesInner{value: val, isSet: true}
}

func (v NullablePostDevResourcesRequestDevResourcesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePostDevResourcesRequestDevResourcesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


