/*
Figma API

This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).

API version: 0.20.0
Contact: support@figma.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the DevStatusTrait type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DevStatusTrait{}

// DevStatusTrait struct for DevStatusTrait
type DevStatusTrait struct {
	DevStatus *DevStatusTraitDevStatus `json:"devStatus,omitempty"`
}

// NewDevStatusTrait instantiates a new DevStatusTrait object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDevStatusTrait() *DevStatusTrait {
	this := DevStatusTrait{}
	return &this
}

// NewDevStatusTraitWithDefaults instantiates a new DevStatusTrait object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDevStatusTraitWithDefaults() *DevStatusTrait {
	this := DevStatusTrait{}
	return &this
}

// GetDevStatus returns the DevStatus field value if set, zero value otherwise.
func (o *DevStatusTrait) GetDevStatus() DevStatusTraitDevStatus {
	if o == nil || IsNil(o.DevStatus) {
		var ret DevStatusTraitDevStatus
		return ret
	}
	return *o.DevStatus
}

// GetDevStatusOk returns a tuple with the DevStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DevStatusTrait) GetDevStatusOk() (*DevStatusTraitDevStatus, bool) {
	if o == nil || IsNil(o.DevStatus) {
		return nil, false
	}
	return o.DevStatus, true
}

// HasDevStatus returns a boolean if a field has been set.
func (o *DevStatusTrait) HasDevStatus() bool {
	if o != nil && !IsNil(o.DevStatus) {
		return true
	}

	return false
}

// SetDevStatus gets a reference to the given DevStatusTraitDevStatus and assigns it to the DevStatus field.
func (o *DevStatusTrait) SetDevStatus(v DevStatusTraitDevStatus) {
	o.DevStatus = &v
}

func (o DevStatusTrait) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DevStatusTrait) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DevStatus) {
		toSerialize["devStatus"] = o.DevStatus
	}
	return toSerialize, nil
}

type NullableDevStatusTrait struct {
	value *DevStatusTrait
	isSet bool
}

func (v NullableDevStatusTrait) Get() *DevStatusTrait {
	return v.value
}

func (v *NullableDevStatusTrait) Set(val *DevStatusTrait) {
	v.value = val
	v.isSet = true
}

func (v NullableDevStatusTrait) IsSet() bool {
	return v.isSet
}

func (v *NullableDevStatusTrait) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDevStatusTrait(val *DevStatusTrait) *NullableDevStatusTrait {
	return &NullableDevStatusTrait{value: val, isSet: true}
}

func (v NullableDevStatusTrait) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDevStatusTrait) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


