/*
Figma API

This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).

API version: 0.20.0
Contact: support@figma.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the IsLayerTraitBoundVariablesSize type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IsLayerTraitBoundVariablesSize{}

// IsLayerTraitBoundVariablesSize struct for IsLayerTraitBoundVariablesSize
type IsLayerTraitBoundVariablesSize struct {
	X *VariableAlias `json:"x,omitempty"`
	Y *VariableAlias `json:"y,omitempty"`
}

// NewIsLayerTraitBoundVariablesSize instantiates a new IsLayerTraitBoundVariablesSize object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIsLayerTraitBoundVariablesSize() *IsLayerTraitBoundVariablesSize {
	this := IsLayerTraitBoundVariablesSize{}
	return &this
}

// NewIsLayerTraitBoundVariablesSizeWithDefaults instantiates a new IsLayerTraitBoundVariablesSize object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIsLayerTraitBoundVariablesSizeWithDefaults() *IsLayerTraitBoundVariablesSize {
	this := IsLayerTraitBoundVariablesSize{}
	return &this
}

// GetX returns the X field value if set, zero value otherwise.
func (o *IsLayerTraitBoundVariablesSize) GetX() VariableAlias {
	if o == nil || IsNil(o.X) {
		var ret VariableAlias
		return ret
	}
	return *o.X
}

// GetXOk returns a tuple with the X field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IsLayerTraitBoundVariablesSize) GetXOk() (*VariableAlias, bool) {
	if o == nil || IsNil(o.X) {
		return nil, false
	}
	return o.X, true
}

// HasX returns a boolean if a field has been set.
func (o *IsLayerTraitBoundVariablesSize) HasX() bool {
	if o != nil && !IsNil(o.X) {
		return true
	}

	return false
}

// SetX gets a reference to the given VariableAlias and assigns it to the X field.
func (o *IsLayerTraitBoundVariablesSize) SetX(v VariableAlias) {
	o.X = &v
}

// GetY returns the Y field value if set, zero value otherwise.
func (o *IsLayerTraitBoundVariablesSize) GetY() VariableAlias {
	if o == nil || IsNil(o.Y) {
		var ret VariableAlias
		return ret
	}
	return *o.Y
}

// GetYOk returns a tuple with the Y field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IsLayerTraitBoundVariablesSize) GetYOk() (*VariableAlias, bool) {
	if o == nil || IsNil(o.Y) {
		return nil, false
	}
	return o.Y, true
}

// HasY returns a boolean if a field has been set.
func (o *IsLayerTraitBoundVariablesSize) HasY() bool {
	if o != nil && !IsNil(o.Y) {
		return true
	}

	return false
}

// SetY gets a reference to the given VariableAlias and assigns it to the Y field.
func (o *IsLayerTraitBoundVariablesSize) SetY(v VariableAlias) {
	o.Y = &v
}

func (o IsLayerTraitBoundVariablesSize) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IsLayerTraitBoundVariablesSize) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.X) {
		toSerialize["x"] = o.X
	}
	if !IsNil(o.Y) {
		toSerialize["y"] = o.Y
	}
	return toSerialize, nil
}

type NullableIsLayerTraitBoundVariablesSize struct {
	value *IsLayerTraitBoundVariablesSize
	isSet bool
}

func (v NullableIsLayerTraitBoundVariablesSize) Get() *IsLayerTraitBoundVariablesSize {
	return v.value
}

func (v *NullableIsLayerTraitBoundVariablesSize) Set(val *IsLayerTraitBoundVariablesSize) {
	v.value = val
	v.isSet = true
}

func (v NullableIsLayerTraitBoundVariablesSize) IsSet() bool {
	return v.isSet
}

func (v *NullableIsLayerTraitBoundVariablesSize) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIsLayerTraitBoundVariablesSize(val *IsLayerTraitBoundVariablesSize) *NullableIsLayerTraitBoundVariablesSize {
	return &NullableIsLayerTraitBoundVariablesSize{value: val, isSet: true}
}

func (v NullableIsLayerTraitBoundVariablesSize) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIsLayerTraitBoundVariablesSize) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


