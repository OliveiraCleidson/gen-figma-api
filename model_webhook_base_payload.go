/*
Figma API

This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).

API version: 0.20.0
Contact: support@figma.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the WebhookBasePayload type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebhookBasePayload{}

// WebhookBasePayload struct for WebhookBasePayload
type WebhookBasePayload struct {
	// The passcode specified when the webhook was created, should match what was initially provided
	Passcode string `json:"passcode"`
	// UTC ISO 8601 timestamp of when the event was triggered.
	Timestamp time.Time `json:"timestamp"`
	// The id of the webhook that caused the callback
	WebhookId string `json:"webhook_id"`
}

type _WebhookBasePayload WebhookBasePayload

// NewWebhookBasePayload instantiates a new WebhookBasePayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebhookBasePayload(passcode string, timestamp time.Time, webhookId string) *WebhookBasePayload {
	this := WebhookBasePayload{}
	this.Passcode = passcode
	this.Timestamp = timestamp
	this.WebhookId = webhookId
	return &this
}

// NewWebhookBasePayloadWithDefaults instantiates a new WebhookBasePayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebhookBasePayloadWithDefaults() *WebhookBasePayload {
	this := WebhookBasePayload{}
	return &this
}

// GetPasscode returns the Passcode field value
func (o *WebhookBasePayload) GetPasscode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Passcode
}

// GetPasscodeOk returns a tuple with the Passcode field value
// and a boolean to check if the value has been set.
func (o *WebhookBasePayload) GetPasscodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Passcode, true
}

// SetPasscode sets field value
func (o *WebhookBasePayload) SetPasscode(v string) {
	o.Passcode = v
}

// GetTimestamp returns the Timestamp field value
func (o *WebhookBasePayload) GetTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *WebhookBasePayload) GetTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *WebhookBasePayload) SetTimestamp(v time.Time) {
	o.Timestamp = v
}

// GetWebhookId returns the WebhookId field value
func (o *WebhookBasePayload) GetWebhookId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WebhookId
}

// GetWebhookIdOk returns a tuple with the WebhookId field value
// and a boolean to check if the value has been set.
func (o *WebhookBasePayload) GetWebhookIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WebhookId, true
}

// SetWebhookId sets field value
func (o *WebhookBasePayload) SetWebhookId(v string) {
	o.WebhookId = v
}

func (o WebhookBasePayload) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebhookBasePayload) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["passcode"] = o.Passcode
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["webhook_id"] = o.WebhookId
	return toSerialize, nil
}

func (o *WebhookBasePayload) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"passcode",
		"timestamp",
		"webhook_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWebhookBasePayload := _WebhookBasePayload{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWebhookBasePayload)

	if err != nil {
		return err
	}

	*o = WebhookBasePayload(varWebhookBasePayload)

	return err
}

type NullableWebhookBasePayload struct {
	value *WebhookBasePayload
	isSet bool
}

func (v NullableWebhookBasePayload) Get() *WebhookBasePayload {
	return v.value
}

func (v *NullableWebhookBasePayload) Set(val *WebhookBasePayload) {
	v.value = val
	v.isSet = true
}

func (v NullableWebhookBasePayload) IsSet() bool {
	return v.isSet
}

func (v *NullableWebhookBasePayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebhookBasePayload(val *WebhookBasePayload) *NullableWebhookBasePayload {
	return &NullableWebhookBasePayload{value: val, isSet: true}
}

func (v NullableWebhookBasePayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebhookBasePayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


