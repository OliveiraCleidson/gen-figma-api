/*
Figma API

This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).

API version: 0.20.0
Contact: support@figma.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConnectorEndpointOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectorEndpointOneOf{}

// ConnectorEndpointOneOf struct for ConnectorEndpointOneOf
type ConnectorEndpointOneOf struct {
	// Node ID that this endpoint attaches to.
	EndpointNodeId *string `json:"endpointNodeId,omitempty"`
	// The position of the endpoint relative to the node.
	Position *Vector `json:"position,omitempty"`
}

// NewConnectorEndpointOneOf instantiates a new ConnectorEndpointOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectorEndpointOneOf() *ConnectorEndpointOneOf {
	this := ConnectorEndpointOneOf{}
	return &this
}

// NewConnectorEndpointOneOfWithDefaults instantiates a new ConnectorEndpointOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectorEndpointOneOfWithDefaults() *ConnectorEndpointOneOf {
	this := ConnectorEndpointOneOf{}
	return &this
}

// GetEndpointNodeId returns the EndpointNodeId field value if set, zero value otherwise.
func (o *ConnectorEndpointOneOf) GetEndpointNodeId() string {
	if o == nil || IsNil(o.EndpointNodeId) {
		var ret string
		return ret
	}
	return *o.EndpointNodeId
}

// GetEndpointNodeIdOk returns a tuple with the EndpointNodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorEndpointOneOf) GetEndpointNodeIdOk() (*string, bool) {
	if o == nil || IsNil(o.EndpointNodeId) {
		return nil, false
	}
	return o.EndpointNodeId, true
}

// HasEndpointNodeId returns a boolean if a field has been set.
func (o *ConnectorEndpointOneOf) HasEndpointNodeId() bool {
	if o != nil && !IsNil(o.EndpointNodeId) {
		return true
	}

	return false
}

// SetEndpointNodeId gets a reference to the given string and assigns it to the EndpointNodeId field.
func (o *ConnectorEndpointOneOf) SetEndpointNodeId(v string) {
	o.EndpointNodeId = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *ConnectorEndpointOneOf) GetPosition() Vector {
	if o == nil || IsNil(o.Position) {
		var ret Vector
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectorEndpointOneOf) GetPositionOk() (*Vector, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *ConnectorEndpointOneOf) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given Vector and assigns it to the Position field.
func (o *ConnectorEndpointOneOf) SetPosition(v Vector) {
	o.Position = &v
}

func (o ConnectorEndpointOneOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectorEndpointOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EndpointNodeId) {
		toSerialize["endpointNodeId"] = o.EndpointNodeId
	}
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	return toSerialize, nil
}

type NullableConnectorEndpointOneOf struct {
	value *ConnectorEndpointOneOf
	isSet bool
}

func (v NullableConnectorEndpointOneOf) Get() *ConnectorEndpointOneOf {
	return v.value
}

func (v *NullableConnectorEndpointOneOf) Set(val *ConnectorEndpointOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectorEndpointOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectorEndpointOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectorEndpointOneOf(val *ConnectorEndpointOneOf) *NullableConnectorEndpointOneOf {
	return &NullableConnectorEndpointOneOf{value: val, isSet: true}
}

func (v NullableConnectorEndpointOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectorEndpointOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


