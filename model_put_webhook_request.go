/*
Figma API

This is the OpenAPI specification for the [Figma REST API](https://www.figma.com/developers/api).  Note: we are releasing the OpenAPI specification as a beta given the large surface area and complexity of the REST API. If you notice any inaccuracies with the specification, please [file an issue](https://github.com/figma/rest-api-spec/issues).

API version: 0.20.0
Contact: support@figma.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PutWebhookRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutWebhookRequest{}

// PutWebhookRequest struct for PutWebhookRequest
type PutWebhookRequest struct {
	EventType WebhookV2Event `json:"event_type"`
	// The HTTP endpoint that will receive a POST request when the event triggers. Max length 2048 characters.
	Endpoint string `json:"endpoint"`
	// String that will be passed back to your webhook endpoint to verify that it is being called by Figma. Max length 100 characters.
	Passcode string `json:"passcode"`
	// State of the webhook, including any error state it may be in
	Status *WebhookV2Status `json:"status,omitempty"`
	// User provided description or name for the webhook. Max length 150 characters.
	Description *string `json:"description,omitempty"`
}

type _PutWebhookRequest PutWebhookRequest

// NewPutWebhookRequest instantiates a new PutWebhookRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutWebhookRequest(eventType WebhookV2Event, endpoint string, passcode string) *PutWebhookRequest {
	this := PutWebhookRequest{}
	this.EventType = eventType
	this.Endpoint = endpoint
	this.Passcode = passcode
	return &this
}

// NewPutWebhookRequestWithDefaults instantiates a new PutWebhookRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutWebhookRequestWithDefaults() *PutWebhookRequest {
	this := PutWebhookRequest{}
	return &this
}

// GetEventType returns the EventType field value
func (o *PutWebhookRequest) GetEventType() WebhookV2Event {
	if o == nil {
		var ret WebhookV2Event
		return ret
	}

	return o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
func (o *PutWebhookRequest) GetEventTypeOk() (*WebhookV2Event, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventType, true
}

// SetEventType sets field value
func (o *PutWebhookRequest) SetEventType(v WebhookV2Event) {
	o.EventType = v
}

// GetEndpoint returns the Endpoint field value
func (o *PutWebhookRequest) GetEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *PutWebhookRequest) GetEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *PutWebhookRequest) SetEndpoint(v string) {
	o.Endpoint = v
}

// GetPasscode returns the Passcode field value
func (o *PutWebhookRequest) GetPasscode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Passcode
}

// GetPasscodeOk returns a tuple with the Passcode field value
// and a boolean to check if the value has been set.
func (o *PutWebhookRequest) GetPasscodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Passcode, true
}

// SetPasscode sets field value
func (o *PutWebhookRequest) SetPasscode(v string) {
	o.Passcode = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *PutWebhookRequest) GetStatus() WebhookV2Status {
	if o == nil || IsNil(o.Status) {
		var ret WebhookV2Status
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutWebhookRequest) GetStatusOk() (*WebhookV2Status, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *PutWebhookRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given WebhookV2Status and assigns it to the Status field.
func (o *PutWebhookRequest) SetStatus(v WebhookV2Status) {
	o.Status = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PutWebhookRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutWebhookRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PutWebhookRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PutWebhookRequest) SetDescription(v string) {
	o.Description = &v
}

func (o PutWebhookRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutWebhookRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["event_type"] = o.EventType
	toSerialize["endpoint"] = o.Endpoint
	toSerialize["passcode"] = o.Passcode
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

func (o *PutWebhookRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"event_type",
		"endpoint",
		"passcode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPutWebhookRequest := _PutWebhookRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPutWebhookRequest)

	if err != nil {
		return err
	}

	*o = PutWebhookRequest(varPutWebhookRequest)

	return err
}

type NullablePutWebhookRequest struct {
	value *PutWebhookRequest
	isSet bool
}

func (v NullablePutWebhookRequest) Get() *PutWebhookRequest {
	return v.value
}

func (v *NullablePutWebhookRequest) Set(val *PutWebhookRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutWebhookRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutWebhookRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutWebhookRequest(val *PutWebhookRequest) *NullablePutWebhookRequest {
	return &NullablePutWebhookRequest{value: val, isSet: true}
}

func (v NullablePutWebhookRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutWebhookRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


